{"version":3,"sources":["common/Preloader/preloader.svg","common/Preloader/Preloader.module.css","slice/todos/todoSlice.js","component/Navbar/Navbar.module.scss","common/FormsControls/FormsControls.js","component/NewTodoItem/NewTodoItem.js","common/utils/validators.js","component/TodoItem/TodoItem.js","slice/todos/todoSelector.js","component/TodoList/TodoList.js","component/SortBtn/SortBtn.js","component/SortControls/SortControls.js","component/Inbox/Inbox.js","component/Today/Today.js","component/Calendar/Calendar.js","component/Navbar/Navbar.js","common/Preloader/Preloader.js","component/ToggleTheme/ToggleTheme.js","component/ToggleNavbar/ToggleNavbar.js","App/App.js","App/rootReducer.js","App/store.js","index.js","common/FormsControls/FormsControls.module.scss","App/App.module.scss","component/TodoItem/TodoItem.module.scss","slice/app/appSlice.js","component/NewTodoItem/NewTodoItem.module.scss","component/Inbox/Inbox.module.scss","component/Today/Today.module.scss","component/Calendar/Calendar.module.scss","component/ToggleTheme/ToggleTheme.module.scss","component/ToggleNavbar/ToggleNavbar.module.scss"],"names":["module","exports","todoSlice","createSlice","name","initialState","todoList","JSON","parse","localStorage","getItem","sortType","allSortType","isReverseSort","reducers","sendTodoItem","state","action","newItem","text","payload","id","Date","now","completed","changeTodoItemText","map","item","toggleCompleted","deleteTodoItem","filter","sortBy","sort","doReverseSort","actions","FormsControls","input","meta","children","required","hasError","touched","error","value","length","undefined","className","styles","formControl","textError","Component","textarea","props","Container","compose","reduxForm","form","enableReinitialize","memo","handleSubmit","dispatch","useDispatch","maxLength","maxLengthCreator","NewTodoItem","onSubmit","formData","todo","reset","Field","validate","component","field","type","placeholder","autoComplete","useState","disabled","setDisabled","inputBodyRef","useRef","useEffect","current","focus","Handler","TodoItem","check","success","checked","onChange","onKeyPress","evt","key","ref","todoBody","target","onClick","TodoSelector","getSortedTodoList","createSelector","items","isReverse","list","a","b","reverse","useSelector","setItem","stringify","Inbox","title","Today","Calendar","Navbar","link","to","Preloader","preloader","src","alt","isDarkTheme","toggle","ToggleTheme","darkTheme","isActiveNavbar","ToggleNavbar","active","setIsDarkTheme","setIsActiveNavbar","initialized","app","initializedSuccess","Handle","callback","prev","App","header","nav","main","path","render","exact","footer","rootReducer","combineReducers","appReducer","todoReducer","formReducer","store","configureStore","reducer","require","default","ReactDOM","basename","document","getElementById","appSlice"],"mappings":"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","file":"static/js/main.27009fd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.88596d71.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3uOPd\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst todoSlice = createSlice({\r\n    name: `todo`,\r\n    initialState: {\r\n        todoList: JSON.parse(localStorage.getItem(`todoList`)) || [],\r\n        sortType: `date`,\r\n        allSortType: [`date`, `done`],\r\n        isReverseSort: false,\r\n    },\r\n    reducers: {\r\n        sendTodoItem(state, action) {\r\n            const { text } = action.payload\r\n            const newItem = {\r\n                text,\r\n                id: +`${Date.now()}`,\r\n                completed: false,\r\n            }\r\n            state.todoList = [\r\n                ...state.todoList, \r\n                newItem\r\n            ]\r\n        },\r\n        changeTodoItemText(state, action) {\r\n            const { text, id } = action.payload\r\n            state.todoList = state.todoList\r\n                .map((item) => item.id === id\r\n                    ? {\r\n                        ...item,\r\n                        text\r\n                    }\r\n                    : item\r\n                )\r\n        },\r\n        toggleCompleted(state, action) {\r\n            const { id } = action.payload\r\n            state.todoList = state.todoList\r\n                .map(item => item.id === id\r\n                    ? {\r\n                        ...item,\r\n                        completed: !item.completed\r\n                    }\r\n                    : item\r\n                )\r\n        },\r\n        deleteTodoItem(state, action) {\r\n            const { id } = action.payload\r\n            state.todoList = state.todoList\r\n                .filter(item => item.id !== id)\r\n        },\r\n        sortBy(state, action) {\r\n            const { sort } = action.payload\r\n            state.sortType = sort\r\n        },\r\n        doReverseSort(state, action) {\r\n            const { isReverseSort } = action.payload\r\n            state.isReverseSort = isReverseSort\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const { sendTodoItem, changeTodoItemText, toggleCompleted, deleteTodoItem, sortBy, doReverseSort } = todoSlice.actions\r\n\r\nexport default todoSlice.reducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__1Vmo0\",\"list\":\"Navbar_list__1Uqju\",\"item\":\"Navbar_item__3JVtF\",\"link\":\"Navbar_link__3_hBE\"};","import React from 'react'\r\nimport styles from './FormsControls.module.scss'\r\n\r\n\r\nconst FormsControls = ({ input, meta, children, required, ...props }) => {\r\n\tconst hasError = !required\r\n\t\t? input.value.length > 0 && meta.error\r\n\t\t: (meta.touched && meta.error) || (input.value.length > 0 && meta.error)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{children}\r\n\t\t\t<span error={hasError ? hasError : undefined} className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n\t\t\t\t{hasError && <span className={styles.textError}>{meta.error}</span>}\r\n\t\t\t</span>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nexport const Component = {\r\n\ttextarea: ({ ...props }) => (\r\n\t\t<FormsControls {...props}>\r\n\t\t\t<textarea className={styles.text} {...props.input} {...props} />\r\n\t\t</FormsControls>\r\n\t),\r\n\r\n\tinput: ({ ...props }) => (\r\n\t\t<FormsControls required='true' {...props}>\r\n\t\t\t<input className={styles.text} {...props.input} {...props} />\r\n\t\t</FormsControls>\r\n\t)\r\n}\r\n\r\n\r\n// export const createField = (placeholder, name, validators, component, props={}, text=``) => (\r\n//   <p>\r\n//     <Field \r\n//       placeholder={placeholder}\r\n//       name={name}\r\n//       validate={validators}\r\n//       component={Component[component]}\r\n//       {...props}\r\n//     />{text}\r\n//   </p>\r\n// )","import React, { memo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { Field, reduxForm, reset } from 'redux-form'\r\n\r\nimport { sendTodoItem } from '../../slice/todos/todoSlice'\r\nimport { Component } from '../../common/FormsControls/FormsControls'\r\nimport { maxLengthCreator } from '../../common/utils/validators'\r\n\r\nimport styles from './NewTodoItem.module.scss'\r\n\r\n\r\nconst NewTodoItem = ({ handleSubmit, ...props }) => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\r\n\tconst onSubmit = (formData) => {\r\n\t\tdispatch(sendTodoItem({ text: formData.todo }))\r\n\t\tdispatch(reset(`newTodoItem`))\r\n\t}\r\n\r\n\r\n\tconst maxLength = maxLengthCreator(30)\r\n\r\n\r\n\treturn (\r\n\t\t<form \r\n\t\t\tclassName={`${styles.NewTodoItem} input-group mb-2`} \r\n\t\t\tonSubmit={handleSubmit(onSubmit)}>\r\n\r\n\t\t\t<Field\r\n\t\t\t\tvalidate={[maxLength]}\r\n\t\t\t\tcomponent={Component.input}\r\n\t\t\t\tclassName={`${styles.field} form-control`}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"todo\"\r\n\t\t\t\tplaceholder={`New todo`}\r\n\t\t\t\tautoComplete=\"off\" />\r\n\t\t\t<button className={`btn btn-outline-success form-control col-2`}>\r\n\t\t\t\tsend\r\n\t\t\t</button>\r\n\t\t\t\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\treduxForm({ form: `newTodoItem`, enableReinitialize: true }),\r\n\tmemo\r\n)(NewTodoItem)\r\n\r\nexport { Container as NewTodoItem }","export const required = (value) => {\r\n  return(!value)\r\n    ? `Field is required`\r\n    : undefined\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  return(value && value.length > maxLength)\r\n    ? `Max length is ${maxLength} symbols`\r\n    : undefined\r\n}\r\n\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n  return(value && value.length < minLength)\r\n    ? `Min length is ${minLength} symbols`\r\n    : undefined\r\n}","import React, { memo, useState, useEffect, useRef } from 'react'\r\nimport { compose } from 'redux'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { changeTodoItemText, toggleCompleted, deleteTodoItem } from '../../slice/todos/todoSlice'\r\n\r\nimport styles from './TodoItem.module.scss'\r\n\r\n\r\nconst TodoItem = ({ text, id, completed }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [disabled, setDisabled] = useState(true)\r\n\r\n    const inputBodyRef = useRef(null)\r\n\r\n\r\n    useEffect(() => {\r\n        !disabled && inputBodyRef.current.focus()\r\n    }, [disabled])\r\n\r\n\r\n    const Handler = {\r\n        changeField: (text, id) => {\r\n            dispatch(changeTodoItemText({ text, id }))\r\n        },\r\n        activated: () => {\r\n            setDisabled(false)\r\n            !disabled && inputBodyRef.current.focus()\r\n        },\r\n        saveChanges: () => {\r\n            setDisabled(!disabled)\r\n        },\r\n        toggleCompleted: (id) => {\r\n            dispatch(toggleCompleted({ id }))\r\n        },\r\n        deleteTodoItem: (id) => {\r\n            dispatch(deleteTodoItem({ id }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li className={`${styles.TodoItem}`}>\r\n            <div className={`input-group `}>\r\n                <div className={`input-group-prepend`}>\r\n                    <div className={`${styles.check} ${completed ? styles.success : ``} input-group-text ${!completed ? `border-warning` : `border-success`}`}>\r\n                        <input\r\n                            checked={completed}\r\n                            type='checkbox'\r\n                            onChange={() => Handler.toggleCompleted(id)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <input\r\n                    onKeyPress={(evt) => evt.key === `Enter` && Handler.saveChanges()}\r\n                    ref={inputBodyRef}\r\n                    type='text'\r\n                    className={`${styles.todoBody} form-control ${!completed ? `border-warning` : `border-success`}`}\r\n                    value={text}\r\n                    onChange={evt => Handler.changeField(evt.target.value, id)}\r\n                    disabled={disabled} \r\n                />\r\n                <button\r\n                    className={`btn btn-primary form-control col-2`}\r\n                    onClick={() => {\r\n                        disabled\r\n                            ? Handler.activated()\r\n                            : Handler.saveChanges()\r\n                    }}>\r\n                    {disabled\r\n                        ? `change`\r\n                        : `save`\r\n                    }\r\n                </button>\r\n                <button className={`btn btn-danger form-control col-1`}\r\n                    onClick={() => Handler.deleteTodoItem(id)}>&times;</button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nconst Container = compose(\r\n    memo\r\n)(TodoItem)\r\n\r\nexport { Container as TodoItem }","import { createSelector } from 'reselect'\r\n\r\n\r\nconst TodoSelector = {\r\n\ttodoList: (state) => state.todo.todoList,\r\n\tsortType: (state) => state.todo.sortType,\r\n\tisReverseSort: (state) => state.todo.isReverseSort,\r\n}\r\n\r\n\r\nexport const getSortedTodoList = createSelector(\r\n\tTodoSelector.todoList, TodoSelector.sortType, TodoSelector.isReverseSort,\r\n\t(items, sortType, isReverse) => {\r\n\t\tlet list = [...items]\r\n\t\tswitch (sortType) {\r\n\t\t\tcase `date`:\r\n\t\t\t\tlist.sort((a, b) => a.id - b.id)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase `done`:\r\n\t\t\t\tlist.sort((a, b) => a.completed - b.completed)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t!isReverse\r\n\t\t\t\t? list\r\n\t\t\t\t: list.reverse()\r\n\t\t)\r\n\t})","import React, { memo, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nimport { TodoItem } from '../TodoItem/TodoItem'\r\n\r\nimport { getSortedTodoList } from '../../slice/todos/todoSelector'\r\n\r\n\r\nconst TodoList = ({ ...props }) => {\r\n\tconst todoList = useSelector(getSortedTodoList)\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(`todoList`, JSON.stringify(todoList))\r\n\t}, [todoList])\r\n\r\n\r\n\treturn (\r\n\t\t<ul className={`list-group`}>\r\n\t\t\t{todoList.map(item => <TodoItem key={item.id} {...item} />)}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(TodoList)\r\n\r\nexport { Container as TodoList }","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { sortBy, doReverseSort } from '../../slice/todos/todoSlice'\r\n\r\n\r\nconst SortBtn = ({ type, ...props }) => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst { sortType, isReverseSort } = useSelector((state) => state.todo)\t\r\n\t\r\n\t\r\n\tconst onSortedClick = (sort) => {\r\n\t\tdispatch(sortBy({ sort }))\r\n\t\tsortType === sort\r\n\t\t\t? dispatch(doReverseSort({ isReverseSort: !isReverseSort }))\r\n\t\t\t: dispatch(doReverseSort({ isReverseSort: false }))\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<button className={`btn btn-outline-primary ${type === sortType ? `active` : ``}`} onClick={() => onSortedClick(type)}>{type}</button>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(SortBtn)\r\n\r\nexport { Container as SortBtn }","import React, { memo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nimport { SortBtn } from '../SortBtn/SortBtn'\r\n\r\n\r\nconst SortControls = ({ ...props }) => {\r\n\tconst { allSortType } = useSelector((state) => state.todo)\r\n\r\n\r\n\treturn (\r\n\t\t<section className={`btn-group mb-4`}>\r\n\t\t\t{allSortType\r\n\t\t\t\t.map(type => <SortBtn\r\n\t\t\t\t\tkey={type}\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\t{...props} />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(SortControls)\r\n\r\nexport { Container as SortControls } \r\n","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport { NewTodoItem } from '../NewTodoItem/NewTodoItem'\r\nimport { TodoList } from '../TodoList/TodoList'\r\nimport { SortControls } from '../SortControls/SortControls'\r\n\r\nimport styles from './Inbox.module.scss'\r\n\r\n\r\nconst Inbox = ({ ...props }) => {\r\n\treturn (\r\n\t\t<section className={`${styles.Inbox}`}>\r\n\t\t\t<h2 className={`${styles.title} mb-4`}>Входящие</h2>\r\n\t\t\t<NewTodoItem />\r\n\t\t\t<SortControls />\r\n\t\t\t<TodoList />\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Inbox)\r\n\r\nexport { Container as Inbox } ","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport { NewTodoItem } from '../NewTodoItem/NewTodoItem'\r\nimport { TodoList } from '../TodoList/TodoList'\r\nimport { SortControls } from '../SortControls/SortControls'\r\n\r\nimport styles from './Today.module.scss'\r\n\r\n\r\nconst Today = ({ ...props }) => {\r\n\treturn (\r\n\t\t<section className={`${styles.Today}`}>\r\n\t\t\t<h2 className={`${styles.title} mb-4`}>Сегодня</h2>\r\n\t\t\t<NewTodoItem />\r\n\t\t\t<SortControls />\r\n\t\t\t<TodoList />\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Today)\r\n\r\nexport { Container as Today } ","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport { NewTodoItem } from '../NewTodoItem/NewTodoItem'\r\nimport { TodoList } from '../TodoList/TodoList'\r\nimport { SortControls } from '../SortControls/SortControls'\r\n\r\nimport styles from './Calendar.module.scss'\r\n\r\n\r\nconst Calendar = ({ ...props }) => {\r\n\treturn (\r\n\t\t<section className={`${styles.Calendar}`}>\r\n\t\t\t<h2 className={`${styles.title} mb-4`}>Календарь</h2>\r\n\t\t\t<NewTodoItem />\r\n\t\t\t<SortControls />\r\n\t\t\t<TodoList />\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Calendar)\r\n\r\nexport { Container as Calendar } ","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport styles from './Navbar.module.scss'\r\n\r\n\r\nconst Navbar = ({ ...props }) => {\r\n\treturn (\r\n\t\t<nav className={`${props.className} ${styles.Navbar}`}>\r\n\t\t\t<ul className={`${styles.list}`}>\r\n\t\t\t\t<li className={`${styles.item}`}>\r\n\t\t\t\t\t<NavLink className={`${styles.link}`} to={`/inbox`}>Входящие</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={`${styles.item}`}>\r\n\t\t\t\t\t<NavLink className={`${styles.link}`} to={`/today`}>Сегодня</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={`${styles.item}`}>\r\n\t\t\t\t\t<NavLink className={`${styles.link}`} to={`/calendar`}>Календарь</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Navbar)\r\n\r\nexport { Container as Navbar }","import React from 'react';\r\nimport preloader from './preloader.svg';\r\nimport styles from './Preloader.module.css';\r\n\r\n\r\nexport const Preloader = () => {\r\n\treturn (\r\n\t\t<section className={styles.preloader}>\r\n\t\t\t<img src={preloader} alt='loading' />\r\n\t\t</section>\r\n\t)\r\n}","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport styles from './ToggleTheme.module.scss'\r\n\r\n\r\nconst ToggleTheme = ({ isDarkTheme, toggle, ...props }) => {\r\n    return (\r\n        <button\r\n            className={`\r\n                ${styles.ToggleTheme} \r\n                ${isDarkTheme ? styles.darkTheme : ``} \r\n                btn`}\r\n            onClick={toggle}\r\n        >\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nconst Container = compose(\r\n    memo\r\n)(ToggleTheme)\r\n\r\nexport { Container as ToggleTheme }","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport styles from './ToggleNavbar.module.scss'\r\n\r\n\r\nconst ToggleNavbar = ({isActiveNavbar, toggle, ...props}) => {\r\n    return (\r\n        <button \r\n            className={`\r\n                ${styles.ToggleNavbar}\r\n                ${isActiveNavbar ? styles.active : ``}\r\n                btn    \r\n            `}\r\n            onClick={toggle}\r\n        >\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nconst Container = compose(\r\n    memo\r\n)(ToggleNavbar)\r\n\r\nexport { Container as ToggleNavbar }","import React, { memo, useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\n\r\nimport { initializedSuccess } from '../slice/app/appSlice'\r\n\r\nimport { Inbox } from '../component/Inbox/Inbox'\r\nimport { Today } from '../component/Today/Today'\r\nimport { Calendar } from '../component/Calendar/Calendar'\r\nimport { Navbar } from '../component/Navbar/Navbar'\r\nimport { Preloader } from '../common/Preloader/Preloader'\r\nimport { ToggleTheme } from '../component/ToggleTheme/ToggleTheme'\r\nimport { ToggleNavbar } from '../component/ToggleNavbar/ToggleNavbar'\r\n\r\nimport styles from './App.module.scss'\r\n\r\n\r\nconst App = ({ ...props }) => {\r\n\tconst [isDarkTheme, setIsDarkTheme] = useState(true)\r\n\tconst [isActiveNavbar, setIsActiveNavbar] = useState(true)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst { initialized } = useSelector((state) => state.app)\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(initializedSuccess())\r\n\t}, [dispatch])\r\n\r\n\r\n\tconst Handle = {\r\n        toggle: (callback) => {\r\n            callback((prev) => !prev)\r\n        }\r\n    }\r\n\r\n\r\n\treturn (\r\n\t\t!initialized\r\n\t\t\t? <Preloader />\r\n\t\t\t: <div className={`${isDarkTheme ? `darkTheme` : ``} ${styles.App}`}>\r\n\t\t\t\t<header className={`${styles.header}`}>\r\n\t\t\t\t\t<h1 className={`visually-hidden`}>Todo list</h1>\r\n\t\t\t\t\t<ToggleNavbar \r\n\t\t\t\t\t\tisActiveNavbar={isActiveNavbar}\r\n\t\t\t\t\t\ttoggle={() => Handle.toggle(setIsActiveNavbar)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ToggleTheme \r\n\t\t\t\t\t\tisDarkTheme={isDarkTheme} \r\n\t\t\t\t\t\ttoggle={() => Handle.toggle(setIsDarkTheme)} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</header>\r\n\t\t\t\t{isActiveNavbar && <Navbar className={styles.nav}/>}\r\n\t\t\t\t<main className={`${styles.main} container pt-4`}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path='/inbox' render={() => <Inbox />} />\r\n\t\t\t\t\t\t<Route path='/today' render={() => <Today />} />\r\n\t\t\t\t\t\t<Route path='/calendar' render={() => <Calendar />} />\r\n\t\t\t\t\t\t<Route path='/' exact render={() => <Inbox />} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</main>\r\n\t\t\t\t<footer className={`${styles.footer}`}>\r\n\t\t\t\t\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default compose(\r\n\tmemo\r\n)(App)","import { combineReducers } from '@reduxjs/toolkit'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nimport appReducer from '../slice/app/appSlice'\r\nimport todoReducer from '../slice/todos/todoSlice'\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    todo: todoReducer,\r\n    form: formReducer,\r\n})","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport { rootReducer } from './rootReducer'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n})\r\n\r\n\r\nif (process.env.NODE_ENV === 'development' && module.hot) {\r\n    module.hot.accept('./rootReducer', () => {\r\n        const newRootReducer = require('./rootReducer').default\r\n        store.replaceReducer(newRootReducer)\r\n    })\r\n}\r\n\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\n//HashRouter для gh-pages\r\nimport {HashRouter} from 'react-router-dom'\r\n\r\nimport store from './App/store'\r\n\r\nimport './index.scss'\r\nimport './assets/css/vars.css'\r\n\r\n\r\nconst render = () => {\r\n  const App = require('./App/App').default\r\n\r\n  ReactDOM.render(\r\n    <HashRouter basename={'https://cool1997.github.io/portfolio/'}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n  )\r\n}\r\n\r\nrender()\r\n\r\nif (process.env.NODE_ENV === 'development' && module.hot) {\r\n  module.hot.accept('./App/App', render)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__14eVv\",\"error\":\"FormsControls_error__1A1JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__r-SBe\",\"nav\":\"App_nav__2Rq4-\",\"header\":\"App_header__3zq2z\",\"main\":\"App_main__1pf0Z\",\"footer\":\"App_footer__3gFZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoItem\":\"TodoItem_TodoItem__1U3eW\",\"check\":\"TodoItem_check__2CTMX\",\"success\":\"TodoItem_success__2SJGs\",\"todoBody\":\"TodoItem_todoBody__T5owV\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst appSlice = createSlice({\r\n    name: `todos`,\r\n    initialState: {\r\n        initialized: false,\r\n    },\r\n    reducers: {\r\n        initializedSuccess(state, action) {\r\n            state.initialized = true\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const { initializedSuccess } = appSlice.actions\r\n\r\nexport default appSlice.reducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewTodoItem\":\"NewTodoItem_NewTodoItem__1g-96\",\"field\":\"NewTodoItem_field__1Egj6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Inbox\":\"Inbox_Inbox__Tacsb\",\"title\":\"Inbox_title__3ffS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Today\":\"Today_Today__3iJbF\",\"title\":\"Today_title__2MsIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calendar\":\"Calendar_Calendar__3YmlG\",\"title\":\"Calendar_title__1eYe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleTheme\":\"ToggleTheme_ToggleTheme__p55IS\",\"darkTheme\":\"ToggleTheme_darkTheme__1PpTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleNavbar\":\"ToggleNavbar_ToggleNavbar__2aNEC\",\"active\":\"ToggleNavbar_active__3KYv0\"};"],"sourceRoot":""}