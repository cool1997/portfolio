{"version":3,"sources":["common/Preloader/preloader.svg","common/Preloader/Preloader.module.css","slice/todos/todoSlice.js","component/FormTodoItem/FormTodoItem.module.scss","component/Navbar/Navbar.module.scss","component/TodoItem/TodoItem.module.scss","component/SortBtn/SortBtn.js","component/Controls/Controls.js","component/BtnAddTodo/BtnAddTodo.js","common/FormsControls/FormsControls.js","component/FormTodoItem/FormTodoItem.js","common/utils/validators.js","component/NewTodoItem/NewTodoItem.js","component/TodoItem/TodoItem.js","slice/todos/todoSelector.js","component/TodoList/TodoList.js","component/Inbox/Inbox.js","component/Today/Today.js","component/Calendar/Calendar.js","component/Navbar/Navbar.js","common/Preloader/Preloader.js","component/ToggleTheme/ToggleTheme.js","component/ToggleNavbar/ToggleNavbar.js","App/App.js","App/rootReducer.js","App/store.js","index.js","common/FormsControls/FormsControls.module.scss","App/App.module.scss","slice/app/appSlice.js","component/Controls/Controls.module.scss","component/BtnAddTodo/BtnAddTodo.module.scss","component/Inbox/Inbox.module.scss","component/Today/Today.module.scss","component/Calendar/Calendar.module.scss","component/ToggleTheme/ToggleTheme.module.scss","component/ToggleNavbar/ToggleNavbar.module.scss"],"names":["module","exports","todoSlice","createSlice","name","initialState","todoList","JSON","parse","localStorage","getItem","sortType","allSortType","isReverseSort","reducers","sendTodoItem","state","action","newItem","text","payload","id","Date","now","completed","changeTodoItemText","map","item","toggleCompleted","deleteTodoItem","filter","sortBy","sort","doReverseSort","actions","Container","compose","memo","type","dispatch","useDispatch","useSelector","todo","className","onClick","props","useState","isControlsOpen","setIsControlsOpen","Handle","toggleIsOpen","prev","styles","Controls","openControls","controlsList","key","setActiveField","BtnAddTodo","iconAdd","btnBody","FormsControls","input","meta","children","required","hasError","touched","error","value","length","undefined","formControl","textError","Component","textarea","reduxForm","form","enableReinitialize","active","saveFieldClick","handleSubmit","initialize","fieldRef","useRef","qwe","focusField","setFocusField","valueField","setValueField","useEffect","setCursorPosition","current","textContent","innerText","onSubmit","formData","reset","focus","changeField","evt","target","toggleFocus","cancel","parent","position","child","firstChild","nextSibling","nodeType","document","getSelection","collapse","maxLength","maxLengthCreator","FormTodoItem","containerField","ref","field","onSelect","onFocus","onBlur","contentEditable","Field","validate","component","placeholder","autoComplete","containerBtn","btn","send","activeField","inputBodyRef","TodoItem","check","success","checked","onChange","todoBody","onDoubleClick","change","delete","TodoSelector","getSortedTodoList","createSelector","items","isReverse","list","a","b","reverse","setItem","stringify","TodoList","Inbox","headerContainer","title","Today","Calendar","Navbar","link","activeClassName","to","Preloader","preloader","src","alt","isDarkTheme","toggle","ToggleTheme","darkTheme","isActiveNavbar","ToggleNavbar","setIsDarkTheme","setIsActiveNavbar","initialized","app","initializedSuccess","callback","App","header","nav","main","path","render","exact","rootReducer","combineReducers","appReducer","todoReducer","formReducer","store","configureStore","reducer","require","default","ReactDOM","basename","getElementById","appSlice"],"mappings":"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","file":"static/js/main.2a0b89b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.88596d71.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3uOPd\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst todoSlice = createSlice({\r\n    name: `todo`,\r\n    initialState: {\r\n        todoList: JSON.parse(localStorage.getItem(`todoList`)) || [],\r\n        sortType: `date`,\r\n        allSortType: [`date`, `done`],\r\n        isReverseSort: false,\r\n    },\r\n    reducers: {\r\n        sendTodoItem(state, action) {\r\n            const { text } = action.payload\r\n            const newItem = {\r\n                text,\r\n                id: +`${Date.now()}`,\r\n                completed: false,\r\n            }\r\n            state.todoList = [\r\n                ...state.todoList, \r\n                newItem\r\n            ]\r\n        },\r\n        changeTodoItemText(state, action) {\r\n            const { text, id } = action.payload\r\n            state.todoList = state.todoList\r\n                .map((item) => item.id === id\r\n                    ? {\r\n                        ...item,\r\n                        text\r\n                    }\r\n                    : item\r\n                )\r\n        },\r\n        toggleCompleted(state, action) {\r\n            const { id } = action.payload\r\n            state.todoList = state.todoList\r\n                .map(item => item.id === id\r\n                    ? {\r\n                        ...item,\r\n                        completed: !item.completed\r\n                    }\r\n                    : item\r\n                )\r\n        },\r\n        deleteTodoItem(state, action) {\r\n            const { id } = action.payload\r\n            state.todoList = state.todoList\r\n                .filter(item => item.id !== id)\r\n        },\r\n        sortBy(state, action) {\r\n            const { sort } = action.payload\r\n            state.sortType = sort\r\n        },\r\n        doReverseSort(state, action) {\r\n            const { isReverseSort } = action.payload\r\n            state.isReverseSort = isReverseSort\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const { sendTodoItem, changeTodoItemText, toggleCompleted, deleteTodoItem, sortBy, doReverseSort } = todoSlice.actions\r\n\r\nexport default todoSlice.reducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormTodoItem\":\"FormTodoItem_FormTodoItem__1db-g\",\"containerField\":\"FormTodoItem_containerField__2mnLG\",\"active\":\"FormTodoItem_active__1uhvq\",\"field\":\"FormTodoItem_field__2xG69\",\"containerBtn\":\"FormTodoItem_containerBtn__1Z523\",\"btn\":\"FormTodoItem_btn__3hh8U\",\"send\":\"FormTodoItem_send__10WvC\",\"cancel\":\"FormTodoItem_cancel__3q96b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__1Vmo0\",\"list\":\"Navbar_list__1Uqju\",\"item\":\"Navbar_item__3JVtF\",\"link\":\"Navbar_link__3_hBE\",\"active\":\"Navbar_active__33JtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoItem\":\"TodoItem_TodoItem__1U3eW\",\"check\":\"TodoItem_check__2CTMX\",\"success\":\"TodoItem_success__2SJGs\",\"todoBody\":\"TodoItem_todoBody__T5owV\",\"btn\":\"TodoItem_btn__xAiIa\",\"change\":\"TodoItem_change__4qCH5\",\"delete\":\"TodoItem_delete__31ZoF\"};","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { sortBy, doReverseSort } from '../../slice/todos/todoSlice'\r\n\r\n\r\nconst SortBtn = ({ type, ...props }) => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst { sortType, isReverseSort } = useSelector((state) => state.todo)\t\r\n\t\r\n\t\r\n\tconst onSortedClick = (sort) => {\r\n\t\tdispatch(sortBy({ sort }))\r\n\t\tsortType === sort\r\n\t\t\t? dispatch(doReverseSort({ isReverseSort: !isReverseSort }))\r\n\t\t\t: dispatch(doReverseSort({ isReverseSort: false }))\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<button className={`btn btn-outline-primary ${type === sortType ? `active` : ``}`} onClick={() => onSortedClick(type)}>{type}</button>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(SortBtn)\r\n\r\nexport { Container as SortBtn }","import React, { memo, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nimport { SortBtn } from '../SortBtn/SortBtn'\r\n\r\nimport styles from './Controls.module.scss'\r\n\r\n\r\nconst Controls = ({ ...props }) => {\r\n\tconst { allSortType } = useSelector((state) => state.todo)\r\n\r\n\tconst [isControlsOpen, setIsControlsOpen] = useState(false)\r\n\r\n\r\n\tconst Handle ={\r\n\t\ttoggleIsOpen: () => {\r\n\t\t\tsetIsControlsOpen((prev) => !prev)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<section \r\n\t\t\tclassName={`${styles.Controls}`}\r\n\t\t\tonClick={Handle.toggleIsOpen}>\r\n\t\t\t<button \r\n\t\t\t\tclassName={`${styles.openControls}`}>\r\n\t\t\t\t<span className={`visually-hidden`}>Выбрать сортировку</span>\r\n\t\t\t</button>\r\n\r\n\t\t\t{isControlsOpen &&\r\n\t\t\t\t<section className={`${styles.controlsList}`}>\r\n\t\t\t\t\t{allSortType\r\n\t\t\t\t\t\t.map(type => <SortBtn\r\n\t\t\t\t\t\t\tkey={type}\r\n\t\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\t\t{...props} />\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</section>\r\n\t\t\t}\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Controls)\r\n\r\nexport { Container as Controls } \r\n","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport styles from './BtnAddTodo.module.scss'\r\n\r\n\r\nconst BtnAddTodo = ({ setActiveField, ...props }) => {\r\n\treturn (\r\n\t\t<button \r\n\t\t\tclassName={`${styles.BtnAddTodo}`}\r\n\t\t\tonClick={() => setActiveField(1)}\r\n\t\t\t{...props}>\r\n\r\n\t\t\t<span className={`${styles.iconAdd}`}></span>\r\n\t\t\t\r\n\t\t\t<span className={`${styles.btnBody}`}>Добавить задачу</span>\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(BtnAddTodo)\r\n\r\nexport { Container as BtnAddTodo }","import React from 'react'\r\nimport styles from './FormsControls.module.scss'\r\n\r\n\r\nconst FormsControls = ({ input, meta, children, required, ...props }) => {\r\n\tconst hasError = !required\r\n\t\t? input.value.length > 0 && meta.error\r\n\t\t: (meta.touched && meta.error) || (input.value.length > 0 && meta.error)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{children}\r\n\t\t\t<span error={hasError ? hasError : undefined} className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n\t\t\t\t{hasError && <span className={styles.textError}>{meta.error}</span>}\r\n\t\t\t</span>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nexport const Component = {\r\n\ttextarea: ({ ...props }) => (\r\n\t\t<FormsControls {...props}>\r\n\t\t\t<textarea className={styles.text} {...props.input} {...props} />\r\n\t\t</FormsControls>\r\n\t),\r\n\r\n\tinput: ({ ...props }) => (\r\n\t\t<FormsControls required='true' {...props}>\r\n\t\t\t<input className={styles.text} {...props.input} {...props} />\r\n\t\t</FormsControls>\r\n\t)\r\n}\r\n\r\n\r\n// export const createField = (placeholder, name, validators, component, props={}, text=``) => (\r\n//   <p>\r\n//     <Field \r\n//       placeholder={placeholder}\r\n//       name={name}\r\n//       validate={validators}\r\n//       component={Component[component]}\r\n//       {...props}\r\n//     />{text}\r\n//   </p>\r\n// )","\r\n\r\nimport React, { memo, useState, useEffect, useRef } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { Field, reduxForm, reset } from 'redux-form'\r\n\r\nimport { sendTodoItem } from '../../slice/todos/todoSlice'\r\nimport { Component } from '../../common/FormsControls/FormsControls'\r\nimport { maxLengthCreator } from '../../common/utils/validators'\r\n\r\nimport styles from './FormTodoItem.module.scss'\r\n\r\n\r\nconst FormTodoItem = ({ text=``, active=true, saveFieldClick, handleSubmit, initialize, setActiveField, ...props }) => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst fieldRef = useRef(null)\r\n\tconst qwe = useRef(null)\r\n\r\n\tconst [focusField, setFocusField] = useState(false)\r\n\tconst [valueField, setValueField] = useState(text)\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\tinitialize({todo: valueField})\r\n\t}, [valueField])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(active) {\r\n\t\t\tHandle.focusField()\r\n\t\t\tHandle.setCursorPosition(qwe, fieldRef.current.textContent.length)\r\n\t\t}\r\n\t}, [active])\r\n\t\r\n\tuseEffect(() => {\r\n\t\tfieldRef.current.innerText = text\r\n\t\tHandle.setCursorPosition(qwe, fieldRef.current.textContent.length)\r\n\t}, [text])\r\n\r\n\r\n\tconst Handle = {\r\n\t\tonSubmit: (formData) => {\r\n\t\t\tif(!text) {\r\n\t\t\t\tdispatch(sendTodoItem({ text: formData.todo }))\r\n\t\t\t\tdispatch(reset(`FormTodoItem`))\r\n\t\t\t\tsetValueField(``)\r\n\t\t\t\tfieldRef.current.innerText = ``\r\n\t\t\t\tfieldRef.current.focus()\r\n\t\t\t} else {\r\n\t\t\t\tsaveFieldClick(valueField)\r\n\t\t\t\tsetActiveField(null)\r\n\t\t\t}\r\n\t\t},\r\n\t\tchangeField: (evt) => {\r\n\t\t\tsetValueField(evt.target.innerText)\r\n\t\t},\r\n\t\ttoggleFocus: () => {\r\n\t\t\tsetFocusField((prev) => !prev)\r\n\t\t},\r\n\t\tfocusField: () => {\r\n\t\t\tfieldRef.current.focus()\r\n\t\t},\r\n\t\tcancel: () => {\r\n\t\t\tfieldRef.current.innerText = text\r\n\t\t\tsetValueField(text)\r\n\t\t\tsetActiveField(null)\r\n\r\n\t\t\tif(!text) {\r\n\t\t\t\tdispatch(reset(`FormTodoItem`))\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetCursorPosition: (parent, position) => {\r\n\t\t\tlet child = parent.current.firstChild\r\n\t\t\twhile(position > 0) {\r\n\t\t\t\tlet length = child.textContent.length\r\n\t\t\t\tif(position > length) {\r\n\t\t\t\t\tposition -= length\r\n\t\t\t\t\tchild = child.nextSibling\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(child.nodeType === 3) return document.getSelection().collapse(child, position)\r\n\t\t\t\t\tchild = child.firstChild\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// setCursorPosition: (ref) => {\r\n\t\t// \tlet length = ref.current.textContent.length\r\n\r\n\t\t// \tif(ref.nodeType == 3) return document.getSelection().collapse(ref, length)\r\n\t\t// \tref = ref.firstChild\r\n\t\t// }\r\n\t}\r\n\r\n\r\n\tconst maxLength = maxLengthCreator(2000)\r\n\r\n\r\n\treturn (\r\n\t\t<form \r\n\t\t\tclassName={`${styles.FormTodoItem}`} \r\n\t\t\tonSubmit={handleSubmit(Handle.onSubmit)}>\r\n\t\t\t<div \r\n\t\t\t\tclassName={`\r\n\t\t\t\t\t${styles.containerField}\r\n\t\t\t\t\t${focusField ? styles.active : ``}\r\n\t\t\t\t`}\r\n\t\t\t\tref={qwe}\r\n\t\t\t\tonClick={Handle.focusField}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`${styles.field}`}\r\n\t\t\t\t\tonSelect={(evt) => Handle.changeField(evt)}\r\n\t\t\t\t\tonFocus={Handle.toggleFocus}\r\n\t\t\t\t\tonBlur={Handle.toggleFocus}\r\n\t\t\t\t\tcontentEditable={`true`}\r\n\t\t\t\t\tref={fieldRef}/>\r\n\r\n\t\t\t\t<Field\r\n\t\t\t\t\tclassName={`visually-hidden`}\r\n\t\t\t\t\tvalidate={[maxLength]}\r\n\t\t\t\t\tcomponent={Component.input}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"todo\"\r\n\t\t\t\t\tplaceholder={`New todo`}\r\n\t\t\t\t\tautoComplete=\"off\" />\r\n\t\t\t</div>\r\n\t\t\t<div className={`${styles.containerBtn}`}>\r\n\t\t\t\t{text \r\n\t\t\t\t\t? <button className={`${styles.btn} ${styles.send}`}>\r\n\t\t\t\t\t\tСохранить\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t: <button className={`${styles.btn} ${styles.send}`}>\r\n\t\t\t\t\t\tДобавить задачу\r\n\t\t\t\t\t</button>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName={`${styles.btn} ${styles.cancel}`}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tHandle.cancel()\r\n\t\t\t\t\t\tsetActiveField(null)\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttype={`button`}>\r\n\t\t\t\t\tОтмена\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\treduxForm({ form: `FormTodoItem`, enableReinitialize: true }),\r\n\tmemo\r\n)(FormTodoItem)\r\n\r\nexport { Container as FormTodoItem }","export const required = (value) => {\r\n  return(!value)\r\n    ? `Field is required`\r\n    : undefined\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  return(value && value.length > maxLength)\r\n    ? `Max length is ${maxLength} symbols`\r\n    : undefined\r\n}\r\n\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n  return(value && value.length < minLength)\r\n    ? `Min length is ${minLength} symbols`\r\n    : undefined\r\n}","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport { BtnAddTodo } from '../BtnAddTodo/BtnAddTodo'\r\nimport { FormTodoItem } from '../FormTodoItem/FormTodoItem'\r\n\r\n\r\nconst NewTodoItem = ({ activeField, setActiveField, ...props }) => {\r\n\treturn (\r\n\t\tactiveField === 1\r\n\t\t? <FormTodoItem setActiveField={setActiveField} />\r\n\t\t: <BtnAddTodo setActiveField={setActiveField} />\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(NewTodoItem)\r\n\r\n\r\nexport { Container as NewTodoItem }","import React, { memo, useRef } from 'react'\r\nimport { compose } from 'redux'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { changeTodoItemText, toggleCompleted, deleteTodoItem } from '../../slice/todos/todoSlice'\r\nimport { FormTodoItem } from '../FormTodoItem/FormTodoItem'\r\n\r\nimport styles from './TodoItem.module.scss'\r\n\r\n\r\nconst TodoItem = ({ setActiveField, active, text, id, completed, ...props }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const inputBodyRef = useRef(null)\r\n\r\n\r\n    const Handle = {\r\n        changeField: (text) => {\r\n            dispatch(changeTodoItemText({ text, id }))\r\n        },\r\n        toggleCompleted: () => {\r\n            dispatch(toggleCompleted({ id }))\r\n        },\r\n        deleteTodoItem: (id) => {\r\n            dispatch(deleteTodoItem({ id }))\r\n        },\r\n    }\r\n\r\n\r\n    return (\r\n        active\r\n        ? <FormTodoItem \r\n            text={text} \r\n            id={id} \r\n            active={active}\r\n            saveFieldClick={Handle.changeField}\r\n            setActiveField={setActiveField} />\r\n\r\n        : <li className={`${styles.TodoItem}`}>\r\n            <label \r\n                className={`\r\n                    ${styles.check} \r\n                    ${completed ? styles.success : ``}`}>\r\n                \r\n                <input\r\n                    className={`visually-hidden`}\r\n                    checked={completed}\r\n                    type='checkbox'\r\n                    onChange={Handle.toggleCompleted}/>\r\n            </label>\r\n            <div \r\n                className={`${styles.todoBody}`}\r\n                ref={inputBodyRef}\r\n                onClick={Handle.toggleCompleted}\r\n                onDoubleClick={() => setActiveField(id)}\r\n                onChange={evt => Handle.changeField(evt.target.value, id)}>\r\n                {text}\r\n            </div>\r\n            <button\r\n                className={`\r\n                    ${styles.btn} \r\n                    ${styles.change}`}\r\n                onClick={() => setActiveField(id)}>\r\n                change\r\n            </button>\r\n            <button \r\n                className={`\r\n                    ${styles.btn} \r\n                    ${styles.delete}`}\r\n                onClick={() => Handle.deleteTodoItem(id)}>&times;\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nconst Container = compose(\r\n    memo\r\n)(TodoItem)\r\n\r\nexport { Container as TodoItem }","import { createSelector } from 'reselect'\r\n\r\n\r\nconst TodoSelector = {\r\n\ttodoList: (state) => state.todo.todoList,\r\n\tsortType: (state) => state.todo.sortType,\r\n\tisReverseSort: (state) => state.todo.isReverseSort,\r\n}\r\n\r\n\r\nexport const getSortedTodoList = createSelector(\r\n\tTodoSelector.todoList, TodoSelector.sortType, TodoSelector.isReverseSort,\r\n\t(items, sortType, isReverse) => {\r\n\t\tlet list = [...items]\r\n\t\tswitch (sortType) {\r\n\t\t\tcase `date`:\r\n\t\t\t\tlist.sort((a, b) => a.id - b.id)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase `done`:\r\n\t\t\t\tlist.sort((a, b) => a.completed - b.completed)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t!isReverse\r\n\t\t\t\t? list\r\n\t\t\t\t: list.reverse()\r\n\t\t)\r\n\t})","import React, { memo, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nimport { TodoItem } from '../TodoItem/TodoItem'\r\n\r\nimport { getSortedTodoList } from '../../slice/todos/todoSelector'\r\n\r\nimport styles from './TodoList.module.scss'\r\n\r\n\r\nconst TodoList = ({ activeField, setActiveField, ...props }) => {\r\n\tconst todoList = useSelector(getSortedTodoList)\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(`todoList`, JSON.stringify(todoList))\r\n\t}, [todoList])\r\n\r\n\r\n\treturn (\r\n\t\t<ul className={`${styles.TodoList}`}>\r\n\t\t\t{todoList.map((item) => <TodoItem \r\n\t\t\t\tactive={activeField === item.id}\r\n\t\t\t\tsetActiveField={setActiveField}\r\n\t\t\t\tkey={item.id} \r\n\t\t\t\t{...item} />\r\n\t\t\t)}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(TodoList)\r\n\r\nexport { Container as TodoList }","import React, { memo, useState } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport { Controls } from '../Controls/Controls'\r\nimport { NewTodoItem } from '../NewTodoItem/NewTodoItem'\r\nimport { TodoList } from '../TodoList/TodoList'\r\n\r\nimport styles from './Inbox.module.scss'\r\n\r\n\r\nconst Inbox = ({ ...props }) => {\r\n\tconst [activeField, setActiveField] = useState(null)\r\n\r\n\r\n\treturn (\r\n\t\t<section className={`${styles.Inbox}`}>\r\n\t\t\t<div className={`${styles.headerContainer}`}>\r\n\t\t\t\t<h2 className={`${styles.title}`}>Входящие</h2>\r\n\t\t\t\t<Controls />\r\n\t\t\t</div>\r\n\r\n\t\t\t<TodoList \r\n\t\t\t\tactiveField={activeField} \r\n\t\t\t\tsetActiveField={setActiveField}/>\r\n\t\t\t<NewTodoItem \r\n\t\t\t\tactiveField={activeField} \r\n\t\t\t\tsetActiveField={setActiveField}/>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Inbox)\r\n\r\nexport { Container as Inbox } ","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport styles from './Today.module.scss'\r\n\r\n\r\nconst Today = ({ ...props }) => {\r\n\treturn (\r\n\t\t<section className={`${styles.Today}`}>\r\n\t\t\t<h2 className={`${styles.title} mb-4`}>Сегодня</h2>\r\n\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Today)\r\n\r\nexport { Container as Today } ","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport styles from './Calendar.module.scss'\r\n\r\n\r\nconst Calendar = ({ ...props }) => {\r\n\treturn (\r\n\t\t<section className={`${styles.Calendar}`}>\r\n\t\t\t<h2 className={`${styles.title} mb-4`}>Предстоящее</h2>\r\n\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Calendar)\r\n\r\nexport { Container as Calendar } ","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport styles from './Navbar.module.scss'\r\n\r\n\r\nconst Navbar = ({ ...props }) => {\r\n\treturn (\r\n\t\t<nav className={`${props.className} ${styles.Navbar}`}>\r\n\t\t\t<ul className={`${styles.list}`}>\r\n\t\t\t\t<li className={`${styles.item}`}>\r\n\t\t\t\t\t<NavLink className={`${styles.link}`} activeClassName={styles.active} to={`/inbox`}>Входящие</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={`${styles.item}`}>\r\n\t\t\t\t\t<NavLink className={`${styles.link}`} activeClassName={styles.active} to={`/today`}>Сегодня</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={`${styles.item}`}>\r\n\t\t\t\t\t<NavLink className={`${styles.link}`} activeClassName={styles.active} to={`/calendar`}>Календарь</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Navbar)\r\n\r\nexport { Container as Navbar }","import React from 'react';\r\nimport preloader from './preloader.svg';\r\nimport styles from './Preloader.module.css';\r\n\r\n\r\nexport const Preloader = () => {\r\n\treturn (\r\n\t\t<section className={styles.preloader}>\r\n\t\t\t<img src={preloader} alt='loading' />\r\n\t\t</section>\r\n\t)\r\n}","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport styles from './ToggleTheme.module.scss'\r\n\r\n\r\nconst ToggleTheme = ({ isDarkTheme, toggle, ...props }) => {\r\n    return (\r\n        <button\r\n            className={`\r\n                ${styles.ToggleTheme} \r\n                ${isDarkTheme ? styles.darkTheme : ``} \r\n                btn`}\r\n            onClick={toggle}\r\n        >\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nconst Container = compose(\r\n    memo\r\n)(ToggleTheme)\r\n\r\nexport { Container as ToggleTheme }","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport styles from './ToggleNavbar.module.scss'\r\n\r\n\r\nconst ToggleNavbar = ({isActiveNavbar, toggle, ...props}) => {\r\n    return (\r\n        <button \r\n            className={`\r\n                ${styles.ToggleNavbar}\r\n                ${isActiveNavbar ? styles.active : ``}\r\n                btn    \r\n            `}\r\n            onClick={toggle}\r\n        >\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nconst Container = compose(\r\n    memo\r\n)(ToggleNavbar)\r\n\r\nexport { Container as ToggleNavbar }","import React, { memo, useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\n\r\nimport { initializedSuccess } from '../slice/app/appSlice'\r\n\r\nimport { Inbox } from '../component/Inbox/Inbox'\r\nimport { Today } from '../component/Today/Today'\r\nimport { Calendar } from '../component/Calendar/Calendar'\r\nimport { Navbar } from '../component/Navbar/Navbar'\r\nimport { Preloader } from '../common/Preloader/Preloader'\r\nimport { ToggleTheme } from '../component/ToggleTheme/ToggleTheme'\r\nimport { ToggleNavbar } from '../component/ToggleNavbar/ToggleNavbar'\r\n\r\nimport styles from './App.module.scss'\r\n\r\n\r\nconst App = ({ ...props }) => {\r\n\tconst [isDarkTheme, setIsDarkTheme] = useState(false)\r\n\tconst [isActiveNavbar, setIsActiveNavbar] = useState(true)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst { initialized } = useSelector((state) => state.app)\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(initializedSuccess())\r\n\t}, [dispatch])\r\n\r\n\r\n\tconst Handle = {\r\n        toggle: (callback) => {\r\n            callback((prev) => !prev)\r\n        }\r\n    }\r\n\r\n\r\n\treturn (\r\n\t\t!initialized\r\n\t\t\t? <Preloader />\r\n\t\t\t: <div className={`${isDarkTheme ? `darkTheme` : ``} ${styles.App}`}>\r\n\t\t\t\t<header className={`${styles.header}`}>\r\n\t\t\t\t\t<h1 className={`visually-hidden`}>Todo list</h1>\r\n\t\t\t\t\t<ToggleNavbar \r\n\t\t\t\t\t\tisActiveNavbar={isActiveNavbar}\r\n\t\t\t\t\t\ttoggle={() => Handle.toggle(setIsActiveNavbar)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ToggleTheme \r\n\t\t\t\t\t\tisDarkTheme={isDarkTheme} \r\n\t\t\t\t\t\ttoggle={() => Handle.toggle(setIsDarkTheme)} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</header>\r\n\t\t\t\t{isActiveNavbar && <Navbar className={styles.nav}/>}\r\n\t\t\t\t<main className={`${styles.main}`}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path='/inbox' render={() => <Inbox />} />\r\n\t\t\t\t\t\t<Route path='/today' render={() => <Today />} />\r\n\t\t\t\t\t\t<Route path='/calendar' render={() => <Calendar />} />\r\n\t\t\t\t\t\t<Route path='/' exact render={() => <Inbox />} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</main>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default compose(\r\n\tmemo\r\n)(App)","import { combineReducers } from '@reduxjs/toolkit'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nimport appReducer from '../slice/app/appSlice'\r\nimport todoReducer from '../slice/todos/todoSlice'\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    todo: todoReducer,\r\n    form: formReducer,\r\n})","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport { rootReducer } from './rootReducer'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n})\r\n\r\n\r\nif (process.env.NODE_ENV === 'development' && module.hot) {\r\n    module.hot.accept('./rootReducer', () => {\r\n        const newRootReducer = require('./rootReducer').default\r\n        store.replaceReducer(newRootReducer)\r\n    })\r\n}\r\n\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\n//HashRouter для gh-pages\r\nimport {HashRouter} from 'react-router-dom'\r\n\r\nimport store from './App/store'\r\n\r\nimport './index.scss'\r\nimport './assets/css/vars.css'\r\nimport './assets/css/reset.css'\r\n\r\n\r\nconst render = () => {\r\n  const App = require('./App/App').default\r\n\r\n  ReactDOM.render(\r\n    <HashRouter basename={'https://cool1997.github.io/portfolio/'}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n  )\r\n}\r\n\r\nrender()\r\n\r\nif (process.env.NODE_ENV === 'development' && module.hot) {\r\n  module.hot.accept('./App/App', render)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__14eVv\",\"error\":\"FormsControls_error__1A1JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__r-SBe\",\"nav\":\"App_nav__2Rq4-\",\"header\":\"App_header__3zq2z\",\"main\":\"App_main__1pf0Z\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst appSlice = createSlice({\r\n    name: `todos`,\r\n    initialState: {\r\n        initialized: false,\r\n    },\r\n    reducers: {\r\n        initializedSuccess(state, action) {\r\n            state.initialized = true\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const { initializedSuccess } = appSlice.actions\r\n\r\nexport default appSlice.reducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Controls_Controls__3XEnH\",\"openControls\":\"Controls_openControls__hG8QE\",\"controlsList\":\"Controls_controlsList__IN2BT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnAddTodo\":\"BtnAddTodo_BtnAddTodo__2arYY\",\"iconAdd\":\"BtnAddTodo_iconAdd__1dN0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Inbox\":\"Inbox_Inbox__Tacsb\",\"headerContainer\":\"Inbox_headerContainer__2NCdH\",\"title\":\"Inbox_title__3ffS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Today\":\"Today_Today__3iJbF\",\"title\":\"Today_title__2MsIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calendar\":\"Calendar_Calendar__3YmlG\",\"title\":\"Calendar_title__1eYe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleTheme\":\"ToggleTheme_ToggleTheme__p55IS\",\"darkTheme\":\"ToggleTheme_darkTheme__1PpTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleNavbar\":\"ToggleNavbar_ToggleNavbar__2aNEC\",\"active\":\"ToggleNavbar_active__3KYv0\"};"],"sourceRoot":""}