{"version":3,"sources":["common/Preloader/preloader.svg","common/Preloader/Preloader.module.css","slice/todos/todoSlice.js","component/Navbar/Navbar.module.scss","component/TodoItem/TodoItem.module.scss","component/BtnAddTodo/BtnAddTodo.js","common/FormsControls/FormsControls.js","component/NewTodoItem/NewTodoItem.js","common/utils/validators.js","component/TodoItem/TodoItem.js","slice/todos/todoSelector.js","component/TodoList/TodoList.js","component/Inbox/Inbox.js","component/SortBtn/SortBtn.js","component/SortControls/SortControls.js","component/Today/Today.js","component/Calendar/Calendar.js","component/Navbar/Navbar.js","common/Preloader/Preloader.js","component/ToggleTheme/ToggleTheme.js","component/ToggleNavbar/ToggleNavbar.js","App/App.js","App/rootReducer.js","App/store.js","index.js","common/FormsControls/FormsControls.module.scss","App/App.module.scss","slice/app/appSlice.js","component/BtnAddTodo/BtnAddTodo.module.scss","component/NewTodoItem/NewTodoItem.module.scss","component/Inbox/Inbox.module.scss","component/Today/Today.module.scss","component/Calendar/Calendar.module.scss","component/ToggleTheme/ToggleTheme.module.scss","component/ToggleNavbar/ToggleNavbar.module.scss"],"names":["module","exports","todoSlice","createSlice","name","initialState","todoList","JSON","parse","localStorage","getItem","sortType","allSortType","isReverseSort","reducers","sendTodoItem","state","action","newItem","text","payload","id","Date","now","completed","changeTodoItemText","map","item","toggleCompleted","deleteTodoItem","filter","sortBy","sort","doReverseSort","actions","Container","compose","memo","toggleActivate","className","styles","BtnAddTodo","onClick","iconAdd","btnBody","FormsControls","input","meta","children","required","hasError","touched","error","value","length","undefined","formControl","textError","Component","textarea","props","reduxForm","form","enableReinitialize","handleSubmit","initialize","dispatch","useDispatch","fieldRef","useRef","useState","active","setActive","valueField","setValueField","useEffect","todo","Handle","onSubmit","formData","reset","current","innerText","prev","changeField","evt","target","maxLength","maxLengthCreator","NewTodoItem","onSelect","field","contentEditable","ref","Field","validate","component","type","placeholder","autoComplete","btnSend","disabled","setDisabled","inputBodyRef","focus","Handler","TodoItem","check","success","checked","onChange","onKeyPress","key","todoBody","btn","change","delete","TodoSelector","getSortedTodoList","createSelector","items","isReverse","list","a","b","reverse","useSelector","setItem","stringify","TodoList","Inbox","title","Today","Calendar","Navbar","link","activeClassName","to","Preloader","preloader","src","alt","isDarkTheme","toggle","ToggleTheme","darkTheme","isActiveNavbar","ToggleNavbar","setIsDarkTheme","setIsActiveNavbar","initialized","app","initializedSuccess","callback","App","header","nav","main","path","render","exact","rootReducer","combineReducers","appReducer","todoReducer","formReducer","store","configureStore","reducer","require","default","ReactDOM","basename","document","getElementById","appSlice"],"mappings":"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","file":"static/js/main.16706942.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.88596d71.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3uOPd\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst todoSlice = createSlice({\r\n    name: `todo`,\r\n    initialState: {\r\n        todoList: JSON.parse(localStorage.getItem(`todoList`)) || [],\r\n        sortType: `date`,\r\n        allSortType: [`date`, `done`],\r\n        isReverseSort: false,\r\n    },\r\n    reducers: {\r\n        sendTodoItem(state, action) {\r\n            const { text } = action.payload\r\n            const newItem = {\r\n                text,\r\n                id: +`${Date.now()}`,\r\n                completed: false,\r\n            }\r\n            state.todoList = [\r\n                ...state.todoList, \r\n                newItem\r\n            ]\r\n        },\r\n        changeTodoItemText(state, action) {\r\n            const { text, id } = action.payload\r\n            state.todoList = state.todoList\r\n                .map((item) => item.id === id\r\n                    ? {\r\n                        ...item,\r\n                        text\r\n                    }\r\n                    : item\r\n                )\r\n        },\r\n        toggleCompleted(state, action) {\r\n            const { id } = action.payload\r\n            state.todoList = state.todoList\r\n                .map(item => item.id === id\r\n                    ? {\r\n                        ...item,\r\n                        completed: !item.completed\r\n                    }\r\n                    : item\r\n                )\r\n        },\r\n        deleteTodoItem(state, action) {\r\n            const { id } = action.payload\r\n            state.todoList = state.todoList\r\n                .filter(item => item.id !== id)\r\n        },\r\n        sortBy(state, action) {\r\n            const { sort } = action.payload\r\n            state.sortType = sort\r\n        },\r\n        doReverseSort(state, action) {\r\n            const { isReverseSort } = action.payload\r\n            state.isReverseSort = isReverseSort\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const { sendTodoItem, changeTodoItemText, toggleCompleted, deleteTodoItem, sortBy, doReverseSort } = todoSlice.actions\r\n\r\nexport default todoSlice.reducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__1Vmo0\",\"list\":\"Navbar_list__1Uqju\",\"item\":\"Navbar_item__3JVtF\",\"link\":\"Navbar_link__3_hBE\",\"active\":\"Navbar_active__33JtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoItem\":\"TodoItem_TodoItem__1U3eW\",\"check\":\"TodoItem_check__2CTMX\",\"success\":\"TodoItem_success__2SJGs\",\"todoBody\":\"TodoItem_todoBody__T5owV\",\"btn\":\"TodoItem_btn__xAiIa\",\"change\":\"TodoItem_change__4qCH5\",\"delete\":\"TodoItem_delete__31ZoF\"};","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport styles from './BtnAddTodo.module.scss'\r\n\r\n\r\nconst BtnAddTodo = ({ toggleActivate, ...props }) => {\r\n\treturn (\r\n\t\t<button \r\n\t\t\tclassName={`${styles.BtnAddTodo}`} \r\n\t\t\tonClick={toggleActivate}>\r\n\r\n\t\t\t<span className={`${styles.iconAdd}`}></span>\r\n\t\t\t\r\n\t\t\t<span className={`${styles.btnBody}`}>Добавить задачу</span>\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(BtnAddTodo)\r\n\r\nexport { Container as BtnAddTodo }","import React from 'react'\r\nimport styles from './FormsControls.module.scss'\r\n\r\n\r\nconst FormsControls = ({ input, meta, children, required, ...props }) => {\r\n\tconst hasError = !required\r\n\t\t? input.value.length > 0 && meta.error\r\n\t\t: (meta.touched && meta.error) || (input.value.length > 0 && meta.error)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{children}\r\n\t\t\t<span error={hasError ? hasError : undefined} className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n\t\t\t\t{hasError && <span className={styles.textError}>{meta.error}</span>}\r\n\t\t\t</span>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nexport const Component = {\r\n\ttextarea: ({ ...props }) => (\r\n\t\t<FormsControls {...props}>\r\n\t\t\t<textarea className={styles.text} {...props.input} {...props} />\r\n\t\t</FormsControls>\r\n\t),\r\n\r\n\tinput: ({ ...props }) => (\r\n\t\t<FormsControls required='true' {...props}>\r\n\t\t\t<input className={styles.text} {...props.input} {...props} />\r\n\t\t</FormsControls>\r\n\t)\r\n}\r\n\r\n\r\n// export const createField = (placeholder, name, validators, component, props={}, text=``) => (\r\n//   <p>\r\n//     <Field \r\n//       placeholder={placeholder}\r\n//       name={name}\r\n//       validate={validators}\r\n//       component={Component[component]}\r\n//       {...props}\r\n//     />{text}\r\n//   </p>\r\n// )","import React, { memo, useState, useEffect, useRef } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { Field, reduxForm, reset } from 'redux-form'\r\n\r\nimport { sendTodoItem } from '../../slice/todos/todoSlice'\r\nimport { BtnAddTodo } from '../BtnAddTodo/BtnAddTodo'\r\nimport { Component } from '../../common/FormsControls/FormsControls'\r\nimport { maxLengthCreator } from '../../common/utils/validators'\r\n\r\nimport styles from './NewTodoItem.module.scss'\r\n\r\n\r\nconst NewTodoItem = ({ handleSubmit, initialize, ...props }) => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst fieldRef = useRef(null)\r\n\r\n\tconst [active, setActive] = useState(true)\r\n\tconst [valueField, setValueField] = useState(``)\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\tinitialize({todo: valueField})\r\n\t}, [valueField])\r\n\r\n\r\n\tconst Handle = {\r\n\t\tonSubmit: (formData) => {\r\n\t\t\tdispatch(sendTodoItem({ text: formData.todo }))\r\n\t\t\tdispatch(reset(`newTodoItem`))\r\n\t\t\tsetValueField(``)\r\n\t\t\tfieldRef.current.innerText = ``\r\n\t\t},\r\n\t\ttoggleActivate: () => {\r\n\t\t\tsetActive((prev) => !prev)\r\n\t\t},\r\n\t\tchangeField: (evt) => {\r\n\t\t\tsetValueField(evt.target.innerText)\r\n\t\t},\r\n\t}\r\n\r\n\r\n\tconst maxLength = maxLengthCreator(2000)\r\n\r\n\r\n\treturn (\r\n\t\tactive\r\n\t\t? <form \r\n\t\t\tclassName={`${styles.NewTodoItem}`} \r\n\t\t\tonSubmit={handleSubmit(Handle.onSubmit)}>\r\n\r\n\t\t\t<div\r\n\t\t\t\tonSelect={(evt) => Handle.changeField(evt)}\r\n\t\t\t\tclassName={`${styles.field}`}\r\n\t\t\t\tcontentEditable={`true`}\r\n\t\t\t\tref={fieldRef}\r\n\t\t\t/>\r\n\r\n\t\t\t<Field\r\n\t\t\t\tclassName={`visually-hidden`}\r\n\t\t\t\tvalidate={[maxLength]}\r\n\t\t\t\tcomponent={Component.input}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"todo\"\r\n\t\t\t\tplaceholder={`New todo`}\r\n\t\t\t\tautoComplete=\"off\" />\r\n\r\n\t\t\t<button className={`${styles.btnSend}`}>\r\n\t\t\t\tsend\r\n\t\t\t</button>\r\n\t\t\t\r\n\t\t</form>\r\n\r\n\t\t: <BtnAddTodo toggleActivate = {Handle.toggleActivate} />\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\treduxForm({ form: `newTodoItem`, enableReinitialize: true }),\r\n\tmemo\r\n)(NewTodoItem)\r\n\r\nexport { Container as NewTodoItem }","export const required = (value) => {\r\n  return(!value)\r\n    ? `Field is required`\r\n    : undefined\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  return(value && value.length > maxLength)\r\n    ? `Max length is ${maxLength} symbols`\r\n    : undefined\r\n}\r\n\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n  return(value && value.length < minLength)\r\n    ? `Min length is ${minLength} symbols`\r\n    : undefined\r\n}","import React, { memo, useState, useEffect, useRef } from 'react'\r\nimport { compose } from 'redux'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { changeTodoItemText, toggleCompleted, deleteTodoItem } from '../../slice/todos/todoSlice'\r\n\r\nimport styles from './TodoItem.module.scss'\r\n\r\n\r\nconst TodoItem = ({ text, id, completed }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [disabled, setDisabled] = useState(true)\r\n\r\n    const inputBodyRef = useRef(null)\r\n\r\n\r\n    useEffect(() => {\r\n        !disabled && inputBodyRef.current.focus()\r\n    }, [disabled])\r\n\r\n\r\n    const Handler = {\r\n        changeField: (text, id) => {\r\n            dispatch(changeTodoItemText({ text, id }))\r\n        },\r\n        activated: () => {\r\n            setDisabled(false)\r\n            !disabled && inputBodyRef.current.focus()\r\n        },\r\n        saveChanges: () => {\r\n            setDisabled(!disabled)\r\n        },\r\n        toggleCompleted: (id) => {\r\n            dispatch(toggleCompleted({ id }))\r\n        },\r\n        deleteTodoItem: (id) => {\r\n            dispatch(deleteTodoItem({ id }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li className={`${styles.TodoItem}`}>\r\n            <label className={`${styles.check} ${completed ? styles.success : ``} ${!completed ? `border-warning` : `border-success`}`}>\r\n                <input\r\n                    checked={completed}\r\n                    type='checkbox'\r\n                    onChange={() => Handler.toggleCompleted(id)}\r\n                />\r\n            </label>\r\n            <input\r\n                onKeyPress={(evt) => evt.key === `Enter` && Handler.saveChanges()}\r\n                ref={inputBodyRef}\r\n                type='text'\r\n                className={`${styles.todoBody} ${!completed ? `border-warning` : `border-success`}`}\r\n                value={text}\r\n                onChange={evt => Handler.changeField(evt.target.value, id)}\r\n                disabled={disabled}\r\n            />\r\n            <button\r\n                className={`${styles.btn} ${styles.change}`}\r\n                onClick={() => {\r\n                    disabled\r\n                        ? Handler.activated()\r\n                        : Handler.saveChanges()\r\n                }}>\r\n                {disabled\r\n                    ? `change`\r\n                    : `save`\r\n                }\r\n            </button>\r\n            <button className={`${styles.btn} ${styles.delete}`}\r\n                onClick={() => Handler.deleteTodoItem(id)}>&times;\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nconst Container = compose(\r\n    memo\r\n)(TodoItem)\r\n\r\nexport { Container as TodoItem }","import { createSelector } from 'reselect'\r\n\r\n\r\nconst TodoSelector = {\r\n\ttodoList: (state) => state.todo.todoList,\r\n\tsortType: (state) => state.todo.sortType,\r\n\tisReverseSort: (state) => state.todo.isReverseSort,\r\n}\r\n\r\n\r\nexport const getSortedTodoList = createSelector(\r\n\tTodoSelector.todoList, TodoSelector.sortType, TodoSelector.isReverseSort,\r\n\t(items, sortType, isReverse) => {\r\n\t\tlet list = [...items]\r\n\t\tswitch (sortType) {\r\n\t\t\tcase `date`:\r\n\t\t\t\tlist.sort((a, b) => a.id - b.id)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase `done`:\r\n\t\t\t\tlist.sort((a, b) => a.completed - b.completed)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t!isReverse\r\n\t\t\t\t? list\r\n\t\t\t\t: list.reverse()\r\n\t\t)\r\n\t})","import React, { memo, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nimport { TodoItem } from '../TodoItem/TodoItem'\r\n\r\nimport { getSortedTodoList } from '../../slice/todos/todoSelector'\r\n\r\nimport styles from './TodoList.module.scss'\r\n\r\n\r\nconst TodoList = ({ ...props }) => {\r\n\tconst todoList = useSelector(getSortedTodoList)\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(`todoList`, JSON.stringify(todoList))\r\n\t}, [todoList])\r\n\r\n\r\n\treturn (\r\n\t\t<ul className={`${styles.TodoList}`}>\r\n\t\t\t{todoList.map(item => <TodoItem key={item.id} {...item} />)}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(TodoList)\r\n\r\nexport { Container as TodoList }","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport { NewTodoItem } from '../NewTodoItem/NewTodoItem'\r\nimport { TodoList } from '../TodoList/TodoList'\r\n\r\nimport styles from './Inbox.module.scss'\r\n\r\n\r\nconst Inbox = ({ ...props }) => {\r\n\treturn (\r\n\t\t<section className={`${styles.Inbox}`}>\r\n\t\t\t<h2 className={`${styles.title}`}>Входящие</h2>\r\n\t\t\t<TodoList />\r\n\t\t\t<NewTodoItem />\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Inbox)\r\n\r\nexport { Container as Inbox } ","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { sortBy, doReverseSort } from '../../slice/todos/todoSlice'\r\n\r\n\r\nconst SortBtn = ({ type, ...props }) => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst { sortType, isReverseSort } = useSelector((state) => state.todo)\t\r\n\t\r\n\t\r\n\tconst onSortedClick = (sort) => {\r\n\t\tdispatch(sortBy({ sort }))\r\n\t\tsortType === sort\r\n\t\t\t? dispatch(doReverseSort({ isReverseSort: !isReverseSort }))\r\n\t\t\t: dispatch(doReverseSort({ isReverseSort: false }))\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<button className={`btn btn-outline-primary ${type === sortType ? `active` : ``}`} onClick={() => onSortedClick(type)}>{type}</button>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(SortBtn)\r\n\r\nexport { Container as SortBtn }","import React, { memo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nimport { SortBtn } from '../SortBtn/SortBtn'\r\n\r\n\r\nconst SortControls = ({ ...props }) => {\r\n\tconst { allSortType } = useSelector((state) => state.todo)\r\n\r\n\r\n\treturn (\r\n\t\t<section className={`btn-group mb-4`}>\r\n\t\t\t{allSortType\r\n\t\t\t\t.map(type => <SortBtn\r\n\t\t\t\t\tkey={type}\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\t{...props} />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(SortControls)\r\n\r\nexport { Container as SortControls } \r\n","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport { NewTodoItem } from '../NewTodoItem/NewTodoItem'\r\nimport { TodoList } from '../TodoList/TodoList'\r\nimport { SortControls } from '../SortControls/SortControls'\r\n\r\nimport styles from './Today.module.scss'\r\n\r\n\r\nconst Today = ({ ...props }) => {\r\n\treturn (\r\n\t\t<section className={`${styles.Today}`}>\r\n\t\t\t<h2 className={`${styles.title} mb-4`}>Сегодня</h2>\r\n\t\t\t<NewTodoItem />\r\n\t\t\t<SortControls />\r\n\t\t\t<TodoList />\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Today)\r\n\r\nexport { Container as Today } ","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport { NewTodoItem } from '../NewTodoItem/NewTodoItem'\r\nimport { TodoList } from '../TodoList/TodoList'\r\nimport { SortControls } from '../SortControls/SortControls'\r\n\r\nimport styles from './Calendar.module.scss'\r\n\r\n\r\nconst Calendar = ({ ...props }) => {\r\n\treturn (\r\n\t\t<section className={`${styles.Calendar}`}>\r\n\t\t\t<h2 className={`${styles.title} mb-4`}>Предстоящее</h2>\r\n\t\t\t<NewTodoItem />\r\n\t\t\t<SortControls />\r\n\t\t\t<TodoList />\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Calendar)\r\n\r\nexport { Container as Calendar } ","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport styles from './Navbar.module.scss'\r\n\r\n\r\nconst Navbar = ({ ...props }) => {\r\n\treturn (\r\n\t\t<nav className={`${props.className} ${styles.Navbar}`}>\r\n\t\t\t<ul className={`${styles.list}`}>\r\n\t\t\t\t<li className={`${styles.item}`}>\r\n\t\t\t\t\t<NavLink className={`${styles.link}`} activeClassName={styles.active} to={`/inbox`}>Входящие</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={`${styles.item}`}>\r\n\t\t\t\t\t<NavLink className={`${styles.link}`} activeClassName={styles.active} to={`/today`}>Сегодня</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={`${styles.item}`}>\r\n\t\t\t\t\t<NavLink className={`${styles.link}`} activeClassName={styles.active} to={`/calendar`}>Календарь</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Navbar)\r\n\r\nexport { Container as Navbar }","import React from 'react';\r\nimport preloader from './preloader.svg';\r\nimport styles from './Preloader.module.css';\r\n\r\n\r\nexport const Preloader = () => {\r\n\treturn (\r\n\t\t<section className={styles.preloader}>\r\n\t\t\t<img src={preloader} alt='loading' />\r\n\t\t</section>\r\n\t)\r\n}","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport styles from './ToggleTheme.module.scss'\r\n\r\n\r\nconst ToggleTheme = ({ isDarkTheme, toggle, ...props }) => {\r\n    return (\r\n        <button\r\n            className={`\r\n                ${styles.ToggleTheme} \r\n                ${isDarkTheme ? styles.darkTheme : ``} \r\n                btn`}\r\n            onClick={toggle}\r\n        >\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nconst Container = compose(\r\n    memo\r\n)(ToggleTheme)\r\n\r\nexport { Container as ToggleTheme }","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport styles from './ToggleNavbar.module.scss'\r\n\r\n\r\nconst ToggleNavbar = ({isActiveNavbar, toggle, ...props}) => {\r\n    return (\r\n        <button \r\n            className={`\r\n                ${styles.ToggleNavbar}\r\n                ${isActiveNavbar ? styles.active : ``}\r\n                btn    \r\n            `}\r\n            onClick={toggle}\r\n        >\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nconst Container = compose(\r\n    memo\r\n)(ToggleNavbar)\r\n\r\nexport { Container as ToggleNavbar }","import React, { memo, useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\n\r\nimport { initializedSuccess } from '../slice/app/appSlice'\r\n\r\nimport { Inbox } from '../component/Inbox/Inbox'\r\nimport { Today } from '../component/Today/Today'\r\nimport { Calendar } from '../component/Calendar/Calendar'\r\nimport { Navbar } from '../component/Navbar/Navbar'\r\nimport { Preloader } from '../common/Preloader/Preloader'\r\nimport { ToggleTheme } from '../component/ToggleTheme/ToggleTheme'\r\nimport { ToggleNavbar } from '../component/ToggleNavbar/ToggleNavbar'\r\n\r\nimport styles from './App.module.scss'\r\n\r\n\r\nconst App = ({ ...props }) => {\r\n\tconst [isDarkTheme, setIsDarkTheme] = useState(false)\r\n\tconst [isActiveNavbar, setIsActiveNavbar] = useState(true)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst { initialized } = useSelector((state) => state.app)\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(initializedSuccess())\r\n\t}, [dispatch])\r\n\r\n\r\n\tconst Handle = {\r\n        toggle: (callback) => {\r\n            callback((prev) => !prev)\r\n        }\r\n    }\r\n\r\n\r\n\treturn (\r\n\t\t!initialized\r\n\t\t\t? <Preloader />\r\n\t\t\t: <div className={`${isDarkTheme ? `darkTheme` : ``} ${styles.App}`}>\r\n\t\t\t\t<header className={`${styles.header}`}>\r\n\t\t\t\t\t<h1 className={`visually-hidden`}>Todo list</h1>\r\n\t\t\t\t\t<ToggleNavbar \r\n\t\t\t\t\t\tisActiveNavbar={isActiveNavbar}\r\n\t\t\t\t\t\ttoggle={() => Handle.toggle(setIsActiveNavbar)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ToggleTheme \r\n\t\t\t\t\t\tisDarkTheme={isDarkTheme} \r\n\t\t\t\t\t\ttoggle={() => Handle.toggle(setIsDarkTheme)} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</header>\r\n\t\t\t\t{isActiveNavbar && <Navbar className={styles.nav}/>}\r\n\t\t\t\t<main className={`${styles.main}`}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path='/inbox' render={() => <Inbox />} />\r\n\t\t\t\t\t\t<Route path='/today' render={() => <Today />} />\r\n\t\t\t\t\t\t<Route path='/calendar' render={() => <Calendar />} />\r\n\t\t\t\t\t\t<Route path='/' exact render={() => <Inbox />} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</main>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default compose(\r\n\tmemo\r\n)(App)","import { combineReducers } from '@reduxjs/toolkit'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nimport appReducer from '../slice/app/appSlice'\r\nimport todoReducer from '../slice/todos/todoSlice'\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    todo: todoReducer,\r\n    form: formReducer,\r\n})","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport { rootReducer } from './rootReducer'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n})\r\n\r\n\r\nif (process.env.NODE_ENV === 'development' && module.hot) {\r\n    module.hot.accept('./rootReducer', () => {\r\n        const newRootReducer = require('./rootReducer').default\r\n        store.replaceReducer(newRootReducer)\r\n    })\r\n}\r\n\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\n//HashRouter для gh-pages\r\nimport {HashRouter} from 'react-router-dom'\r\n\r\nimport store from './App/store'\r\n\r\nimport './index.scss'\r\nimport './assets/css/vars.css'\r\n\r\n\r\nconst render = () => {\r\n  const App = require('./App/App').default\r\n\r\n  ReactDOM.render(\r\n    <HashRouter basename={'https://cool1997.github.io/portfolio/'}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n  )\r\n}\r\n\r\nrender()\r\n\r\nif (process.env.NODE_ENV === 'development' && module.hot) {\r\n  module.hot.accept('./App/App', render)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__14eVv\",\"error\":\"FormsControls_error__1A1JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__r-SBe\",\"nav\":\"App_nav__2Rq4-\",\"header\":\"App_header__3zq2z\",\"main\":\"App_main__1pf0Z\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst appSlice = createSlice({\r\n    name: `todos`,\r\n    initialState: {\r\n        initialized: false,\r\n    },\r\n    reducers: {\r\n        initializedSuccess(state, action) {\r\n            state.initialized = true\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const { initializedSuccess } = appSlice.actions\r\n\r\nexport default appSlice.reducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnAddTodo\":\"BtnAddTodo_BtnAddTodo__2arYY\",\"iconAdd\":\"BtnAddTodo_iconAdd__1dN0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewTodoItem\":\"NewTodoItem_NewTodoItem__1g-96\",\"field\":\"NewTodoItem_field__1Egj6\",\"btnSend\":\"NewTodoItem_btnSend__18xog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Inbox\":\"Inbox_Inbox__Tacsb\",\"title\":\"Inbox_title__3ffS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Today\":\"Today_Today__3iJbF\",\"title\":\"Today_title__2MsIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calendar\":\"Calendar_Calendar__3YmlG\",\"title\":\"Calendar_title__1eYe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleTheme\":\"ToggleTheme_ToggleTheme__p55IS\",\"darkTheme\":\"ToggleTheme_darkTheme__1PpTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleNavbar\":\"ToggleNavbar_ToggleNavbar__2aNEC\",\"active\":\"ToggleNavbar_active__3KYv0\"};"],"sourceRoot":""}